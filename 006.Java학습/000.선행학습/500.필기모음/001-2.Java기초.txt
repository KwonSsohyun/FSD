[ Java 기초 ｜ 2021.11.02  ]

변수 <-> 상수
variable <-> constant

_________________________________________________________________________

상수
1. constant : 값을 한번만 할당할 수 있는 공간
2. literal : 그 자체로 값을 의미하는 것


final을 붙히면 상수!
ex) final int val = 100;
    -> constant >> val 이 해당됨.
    -> literal >> 100 이 해당됨.

_________________________________________________________________________

논리형 : boolean 
         여기에 들어가는 리터럴은 >> false, ture

Octo- heXa-

int, short, long int : 정수형 / 1, 123, 0b0101, 077, 0x1F, 100L
                       ▷ 0b0101 : (2진수) 0101 10진수로는 5에 해당
                       ▷ 077 : (8진수) 77
                       ▷ 0x1F : (16진수) 1F
                       ▷ 100L : (long인티저) 100정수

정수형의 기본은 int

float, double : 실수형 / 3.14, 10f, 3.0e8
실수형의 기본은 double

ex) 3.14 = 0.314 x 10+1 (10의 1승) === 0.314e1 (e는 지수)

ex) float f;
    f = 3.14f;
    f가 float을 의미하는데 이게 뭐냐면
    3.141592535.... 이렇게 소숫점이 끝이 없으면 몇번째자리인지 메모리 세야해서
    f로 끊어준다.



char : 단일글자형, 단일문자형 / '1', 'A' (A는 65번), '\n' 
String : 문자열 / "abc def", "true"

System.out.print("제 20회 JAVA 클라우드 개강 \n 대용량 DB설계 \n") >> \n (개행엔터 글자다.)
▶ 제 20회 JAVA 클라우드 개강
   대용량 DB설계

_________________________________________________________________________

산술연산자 : +
문자열 결합 연산자 : +

a + b;

String name = "ja" + "va";  >> java
String str = name + 8.0;  >> java8.0

_________________________________________________________________________

[ 기본형 vs 참조형 ]

  ▶ 기본형(Primitive type)
     : boolean, char, 정수형(byte, short, int, long), 실수형(float, double)

  ▶ 참조형(reference type)
     : 기본형을 제외한 나머지 모든 타입. (즉 포인터가 된다.)

       ex) String str = "abc def";
           str이라는 박스공간이 있는데, 다른 박스에 abc def가 담겨있는데, 그걸 str이 가르키고 있다.

           int[] arr;  >> 배열


           float pi;  >> 그래야 메모리를 작게 잡아먹으니
           pi = 3.14f;  >> f라는 접미사를 붙혀준다.

           float : 1.4E-45 ~ 3.4E38
           double : 4.9E-324 ~ 1.8E308