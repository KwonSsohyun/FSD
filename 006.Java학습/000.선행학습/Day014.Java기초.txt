[ Java 기초 ｜ 2021.11.22 ]

[ 배열 ]
  : 같은 타입의 데이터를 연속된 공간에 나열시키고,
    각 데이터에 인덱스(index)를 부여해 놓은 자료구조

________________________________________________________________________________________________________________________


[ 배열변수의 선언 ]
  : 두 가지 형태로 선언이 가능하다.

    ─────────────────────────────────────────────────────────────────
    │          타입[] 변수;          │          타입 변수[];          │          
    ─────────────────────────────────────────────────────────────────
    │ ex)                            │ ex)                           │
    │        int[] intArray;         │        int intArray[];        │   
    │      double[] doubleArray;     │     double doubleArray[];     │
    │       String[] strArray;       │       String strArray[];      │    
    │                                │                               │
    ─────────────────────────────────────────────────────────────────
    ※ 배열 변수도 참조변수이기 때문에 null 값으로 초기화 할 수 있다.


    ▶▶  타입[] 변수 = null;
          ※ null 값을 가진 상태에서 변수[인덱스] 값을 읽거나 저장할 때는 "NullPointerrException" 발생!

________________________________________________________________________________________________________________________


[ 배열 객체 생성 ]
  : 배열 객체는 중괄호 {} 를 이용한 값 목록으로 생성, new 연산자를 이용하는 방법
    두 가지 형태로 생성할 수 있다.


    배열 항목에 먼저 저장될 값의 목록이 있다면 아래처럼 배열 객체를 만들 수 있다.
    ▶▶ 데이터타입[] 변수 = {값0, 값1, 값2, ... };

    ────────────────────────────────────────────────────────────────────────────────────────────
    │        스택 영역          │                         힙 영역                                │       
    ────────────────────────────────────────────────────────────────────────────────────────────
    │                          │                                                                │
    │          변수            │    ──────────────────────────────────────────────────────────  │
    │   ───────────────────    │   │  변수[0]  │  변수[1]  │  변수[2]  │  변수[3]  │  변수[4]  │  │
    │   │     5 번지       │   │    ──────────────────────────────────────────────────────────   │
    │   ───────────────────    │   │   값 0    │   값 1    │   값 2    │   값 3    │   값 4   │  │
    │                          │    ──────────────────────────────────────────────────────────  │
    │                 ----- 참조 ----▶ 5 번지                                                   │
    ────────────────────────────────────────────────────────────────────────────────────────────


________________________________________________________________________________________________________________________


[ 값 목록으로 배열 객체를 생성시 주의할 점 ]
  : 배열 변수를 이미 선언한 후에 다른 실행문에서 중괄호를 사용한 배열 생성은 허용되지 않는다.
    
    타입[] 변수;
    변수 = {값0, 값1, 값2, .... };  // 컴파일 에러!! 초기화 불가!
  
    ----------------------------------------------------------------

    ▶ 배열 변수를 미리 선언한 후 
       값 목록들이 나중에 결정되는 상황이라면,
    ▶▶ new 연산자를 통해 값 목록을 지정해야한다.

    ▶▶ 변수 = new 타입[] {값0, 값1, 값2, ... };

    ----------------------------------------------------------------

    아래와 같이 배열변수가 미리 선언되어야 하는 경우,
    ▶▶ null 값으로 초기화 시킨 후,
    ▶▶ 이후에 배열 변수에 배열 객체를 참조시키면 된다.

    ▶▶ String[] names = null;
    ▶▶ names = new String[] {"Kephi", "batzzi", ... };

    
    ▶ 메소드의 매개 값이 배열일 경우도 마찬가지!!!
       int add(int[] score){...}
       ...
       int result = add({95, 85, 90});            // 컴파일 에러!!
       int result = add(new int[] {95, 85, 90});  // "new 연산자 사용" 해야한다.
       ▷ 값 목록으로 배열을 생성함과 동시에
          add() 메소드의 매개 값으로 사용할 때는 반드시 new연산자를 사용해야 한다.

________________________________________________________________________________________________________________________


[ new 연산자로 배열 객체 생성 ]
  : 값의 목록을 가지고 있지 않지만, 
    향후 값을 저장할 배열을 미리 만들고 싶은 경우 
    new 연산자로 배열 객체를 생성한다.

    ▶ 타입[] 변수 = new 타입[길이];
       ※ 길이 : 배열이 저장할 수 있는 값의 수를 지정한다.

    ▶ 이미 배열변수가 선언된 후에도 가능하다.
       타입[] 변수 = null;
       변수 = new 타입[길이];

       ex) 
       ▶▶ int[] intArray = new int[5];

       자바에서는 intArray[0] ~ intArray[4] 까지 값이 저장될 수 있는 공간을 확보하고,
       배열의 생성 번지 (intArray[0]) 을 반환한다. 
       반환된 번지는 intArray 변수에 저장된다.


       < 배열의 스택 / 힙 영역 저장 >

       ──────────────────────     ────────────────────────────────────────────────────────────────────────────── 
       │     스택 영역       │    │                                  힙 영역                                     │
       ──────────────────────     ────────────────────────────────────────────────────────────────────────────── 
       │                    │    │                                                                              │
       │   ──────────────   │    │     intArray[0]   intArray[1]   intArray[2]   intArray[3]   intArray[4]      │
       │   │  intArray  │   │    │   ───────────────────────────────────────────────────────────────────────    │
       │   ──────────────   │    │   │    4byte    │    4byte    │    4byte    │    4byte    │    4byte    │    │
       │                    │    │   ───────────────────────────────────────────────────────────────────────    │
       ──────────────────────     ──────────────────────────────────────────────────────────────────────────────

                                                             위의 4byte 하나를 나타냄
                                                  ─────────────────────────────────────────────
                                                  │ 00000000 │ 00000000 │ 00000000 │ 00000000 │
                                                  ─────────────────────────────────────────────
                                                      1byte      1byte      1byte      1byte


    ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

    ▶ new 연산자로 배열을 처음 생성할 경우 자동으로 기본값 0으로 초기화 된다.

    ▷ int[] scores = new int[30];
       ▷▷ scores[0] ~ score[29] 까지 모두 
            "기본값 0 으로 초기화" 된다.


    ※ 만약 String 배열을 생성했다면,
       ▷ names[0] ~ names[29] 가지 모두 null로 초기화 된다.
       ▶ String[] names = new String[30];

________________________________________________________________________________________________________________________


[ 타입별 배열 초기값 ]

  ───────────────────────────────────────────────────────────────
  │         구분         │       데이터 타입       │    초기값    │     
  ───────────────────────────────────────────────────────────────
  │    기본 정수 타입     │         byte[]         │       0      │
  │                      │         char[]         │   '\u0000'   │
  │                      │        short[]         │       0      │
  │                      │          int[]         │       0      │
  │                      │         long[]         │       0L     │
  ───────────────────────────────────────────────────────────────
  │    기본 실수 타입     │        float[]         │     0.0F     │
  │                      │       double[]         │     0.0      │
  ───────────────────────────────────────────────────────────────
  │    기본 논리 타입     │      boolean[]         │    false     │
  ───────────────────────────────────────────────────────────────
  │       참조 타입       │       클래스[]         │     null     │
  │                      │      인터페이스[]       │     null     │
  ───────────────────────────────────────────────────────────────

________________________________________________________________________________________________________________________


  ※ 배열 생성 후 새로운 값을 저장하려면 대입 연산자를 사용한다.
     ▶ 변수[인덱스] = 값;

        ex)
        arr3[0] = "1월";
        arr3[1] = "2월";
        arr3[2] = "3월";

________________________________________________________________________________________________________________________


[ 배열의 길이 ]
  : 배열에 저장할 수 있는 전체 항목의 수


[ length 필드 ]
  : 배열 길이를 얻으려면 배열 객체의 length 필드를 읽는다.
    ＊ 필드 : 객체 내부의 데이터

    배열의 length 필드를 읽기 위해서는 (.) 연산자를 붙이고 length 를 적는다.
    ▶▶ 배열변수.length;

    ex)
    int[] intArray = {10, 20, 30};  // 3개의 항목
    int num = intArray.length;      // 변수 num에는 3이 저장된다.

    ※ length 필드는 읽기 전용 필드이기 때문에 값을 바꿀 수 없다!!
       intArray.length = 10;        // 잘못된 코드!!


    ★ length 필드는 for문을 사용해서 배열 전체를 루핑 또는 검색할 때 유용하다.

________________________________________________________________________________________________________________________


[ 다차원 배열 ]
  : 수학 행렬처럼 가로 인덱스와 세로 인덱스를 사용한다.
    2행 3열 행렬을 만들기 위해서는 아래와 같이 2차원 배열을 생성한다.

    ------------------------------------------------------------------------------------------------------------------------

    ▶▶ int[][] scores = new int[2][3]
         위 코드는 아래와 같이 "세 개의 배열 객체" 를 생성한다.

         < 2차원 배열의 스택, 힙 영역 생성 방식 > 

         ──────────────────────────      ────────────────────────────────────────────────────────────────────────────────
         │       스택 영역         │      │                               힙 영역                                         │
         ──────────────────────────      ────────────────────────────────────────────────────────────────────────────────
         │                        │      │                                                                               │
         │   ───────────────────  │      │                            int 타입 배열 A                                     │
         │   │   scores   │    │  │ ------------------------▶    ───────────────────────                                │
         │   ───────────────────  │      │                        │     length : 2      │                                │
         │                        │      │                        │                     │                                │
         │                        │      │                        │      0      1       │                                │
         ──────────────────────────      │                        │   ───────────────   │                                │
                                         │                        │   │      │      │   │                                │
                                         │                        │   ───────────────   │                                │
                                         │                        ───────────────────────                                │
                                         │                             ↙         ↘                                     │
                                         │                                                                               │
                                         │           int 타입 배열 B                       int 타입 배열 C                │
                                         │     ───────────────────────────          ───────────────────────────          │
                                         │     │       length : 3        │          │       length : 3        │          │
                                         │     │                         │          │                         │          │
                                         │     │     0     1     2       │          │     0     1     2       │          │
                                         │     │   ───────────────────   │          │   ───────────────────   │          │
                                         │     │   │  0  │  0  │  0  │   │          │   │  0  │  0  │  0  │   │          │
                                         │     │   ───────────────────   │          │   ───────────────────   │          │
                                         │     │                         │          │                         │          │
                                         │     ───────────────────────────          ───────────────────────────          │
                                         │                                                                               │
                                         ────────────────────────────────────────────────────────────────────────────────

    ------------------------------------------------------------------------------------------------------------------------